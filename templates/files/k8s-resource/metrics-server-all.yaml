apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    giantswarm.io/service-type: managed
    app: metrics-server
---
apiVersion: v1
kind: Service
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    giantswarm.io/service-type: managed
    app: metrics-server
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 10443
  selector:
    app: metrics-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    giantswarm.io/service-type: managed
    app: metrics-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        giantswarm.io/service-type: managed
        app: metrics-server
    spec:
      serviceAccountName: metrics-server
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      priorityClassName: giantswarm-critical
      containers:
        - name: metrics-server
          image: {{.DockerRegistry}}/giantswarm/metrics-server-amd64:v0.3.3
          imagePullPolicy: IfNotPresent
          command:
            - /metrics-server
            - "--logtostderr"
            - "--kubelet-insecure-tls"
            - "--kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP"
            - "--cert-dir=/tmp"
            - "--secure-port=10443"
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.metrics.k8s.io
  labels:
    giantswarm.io/service-type: managed
    app: metrics-server
spec:
  service:
    name: metrics-server
    namespace: kube-system
  group: metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
