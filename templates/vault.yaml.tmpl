systemd:
  units:
    - name: update-engine.service
      enabled: false
      mask: true
    - name: locksmithd.service
      enabled: false
      mask: true
    - name: etcd2.service
      enabled: false
      mask: true
    - name: etcd-init.service
      command: stop
      enabled: false
      mask: true
    - name: fleet.service
      enabled: false
      mask: true
    - name: var-lib-etcd.mount
      enabled: false
      contents: |
        [Unit]
        Description=Mount disk to /var/lib/etcd
        Before=etcd.service
        [Mount]
        What=/dev/disk/by-label/var-lib-etcd
        Where=/var/lib/etcd
        Type=ext4
    # Automount etcd dir when first accessed.
    # This allows to avoid hard dependencies.
    - name: var-lib-etcd.automount
      command: start
      enabled: true
      contents: |
        [Unit]
        Description=Automount for etcd volume
        [Automount]
        Where=/var/lib/etcd
        [Install]
        WantedBy=multi-user.target
    - name: docker.service
      command: start
      dropins:
      - name: 10-giantswarm-extra-args.conf
        contents: |
          [Service]
          Environment=DOCKER_OPTS="--log-opt max-size=50m --log-opt max-file=2"
          Environment=DOCKER_OPT_BIP=--bip={{ .DockerCIDR }}
      - name: 60-docker-restart-always.conf
        contents: |
          [Service]
          Restart=always
          RestartSec=5

storage:
  filesystems:
    - name: etcd
      mount:
        device: {{if eq .Provider "azure" }}/dev/sdc{{else}}/dev/xvdc{{end}}
        format: ext4
        wipe_filesystem: false
        label: var-lib-etcd
  files:
    - path: /etc/vault/vault.hcl
      filesystem: root
      mode: 0400
      contents:
        inline: |
          backend "etcd" {
            address = "https://127.0.0.1:2379"
            path = "vault/"
            tls_ca_file = "/etc/etcd/etcd-ca.pem"
            tls_cert_file = "/etc/etcd/etcd.pem"
            tls_key_file = "/etc/etcd/etcd-key.pem" 
          }

          listener "tcp" {
            address = "0.0.0.0:8200"
            tls_cert_file = "/etc/vault/vault-crtca.pem"
            tls_key_file = "/etc/vault/vault-key.pem"
          }

          max_lease_ttl = "4320h"

          {{ if .VaultAutoUnseal -}}
          {{ if eq .Provider "aws" -}}
          seal "awskms" {
            region = "{{ .AWSRegion }}"
            kms_key_id = "alias/{{ .ClusterName }}-vault-unseal-key"
            endpoint= "kms.{{ .AWSRegion }}.amazonaws.com"
          }
          {{ end -}}
          {{ if eq .Provider "azure" -}}
          seal "azurekeyvault" {
            vault_name     = "gs-{{ .ClusterName }}-vault"
            key_name       = "{{ .ClusterName }}-vault-unseal-key"
            tenant_id      = "{{ .AzureSPTenantID }}"
          }
          {{ end -}}
          {{ end -}}
{{ .BastionUsers }}
