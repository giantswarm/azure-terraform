systemd:
  units:
    - name: update-engine.service
      enabled: false
      mask: true
    - name: locksmithd.service
      enabled: false
      mask: true
    - name: etcd2.service
      enabled: false
      mask: true
    - name: etcd-init.service
      command: stop
      enabled: false
      mask: true
    - name: fleet.service
      enabled: false
      mask: true
    - name: var-lib-etcd.mount
      enabled: false
      contents: |
        [Unit]
        Description=Mount disk to /var/lib/etcd
        Before=etcd.service
        [Mount]
        What=/dev/disk/by-label/var-lib-etcd
        Where=/var/lib/etcd
        Type=ext4
    # Automount etcd dir when first accessed.
    # This allows to avoid hard dependencies.
    - name: var-lib-etcd.automount
      command: start
      enabled: true
      contents: |
        [Unit]
        Description=Automount for etcd volume
        [Automount]
        Where=/var/lib/etcd
        [Install]
        WantedBy=multi-user.target
    - name: docker.service
      command: start
      dropins:
      - name: 10-giantswarm-extra-args.conf
        contents: |
          [Service]
          Environment="DOCKER_OPT_BIP=--bip={{ .DockerCidr }}
      - name: 60-docker-restart-always.conf
        contents: |
          [Service]
          Restart=always
          RestartSec=5

storage:
  files:
    - path: /etc/profile.d/confirm-shutdown.sh
      filesystem: root
      mode: 0444
      contents:
        inline: |
          alias shutdown="/usr/local/bin/confirm /usr/sbin/shutdown"
          alias reboot="/usr/local/bin/confirm /usr/sbin/reboot"
    - path: /usr/local/bin/confirm
      filesystem: root
      mode: 0555
      contents:
        inline: |
          #!/usr/bin/env bash
          echo "About to execute $1 command"
          echo -n "Would you like to proceed y/n? "
          read reply

          if [ "$reply" = y -o "$reply" = Y ]
          then
            $1 "${@:2}"
          else
            echo "$1 ${@:2} cancelled"
          fi
  filesystems:
    - name: etcd
      mount:
        device: {{if eq .Provider "azure" }}/dev/sdc{{else}}/dev/xvdc{{end}}
        format: ext4
        wipe_filesystem: false
        label: var-lib-etcd
{{ .BastionUsers }}
