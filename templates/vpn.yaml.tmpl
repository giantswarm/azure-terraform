ignition:
  version: "2.2.0"
systemd:
  units:
    - name: update-engine.service
      enabled: false
      mask: true
    - name: locksmithd.service
      enabled: false
      mask: true
    - name: etcd-init.service
      enabled: false
      mask: true
    - name: fleet.service
      enabled: false
      mask: true
    - name: os-hardening.service
      enabled: true
      contents: |
        [Unit]
        Description=Apply os hardening
        [Service]
        Type=oneshot
        ExecStartPre=-/bin/bash -c "gpasswd -d core rkt; gpasswd -d core docker; gpasswd -d core wheel"
        ExecStartPre=/bin/bash -c "until [ -f '/etc/sysctl.d/hardening.conf' ]; do echo Waiting for sysctl file; sleep 1s;done;"
        ExecStart=/usr/sbin/sysctl -p /etc/sysctl.d/hardening.conf
        [Install]
        WantedBy=multi-user.target
    - name: template-ipsec-config.service
      enabled: true
      contents: |
        [Unit]
        Description=oneshot command for filling ip addreses into ipsec configs
        Wants=network-online.target
        After=network-online.target
        Before=strongswan.service

        [Service]
        Type=oneshot
        ExecStart=/opt/bin/template-ipsec-config

        [Install]
        WantedBy=multi-user.target
    - name: setup-iptables.service
      enabled: true
      contents: |
        [Unit]
        Description=oneshot command for setup iptables rules for ipsec
        Wants=network-online.target template-ipsec-config.service
        After=network-online.target template-ipsec-config.service

        [Service]
        Type=oneshot
        ExecStart=/opt/bin/setup-iptables

        [Install]
        WantedBy=multi-user.target
    - name: strongswan.service
      enabled: true
      contents: |
        [Unit]
        Description=strongswan ipsec service running in docker
        Requires=docker.service template-ipsec-config.service
        After=docker.service template-ipsec-config.service

        [Service]
        Environment="NAME=%p.service"
        Environment="IMAGE={{.DockerRegistry}}/giantswarm/docker-strongswan:d432793577e07bfe6856d3739e6bca3d91db71e4"
        Restart=always
        RestartSec=10
        TimeoutStopSec=10
        ExecStartPre=/usr/bin/docker pull $IMAGE
        ExecStartPre=/bin/bash -c "touch /var/log/charon.log"
        ExecStart=/usr/bin/docker run --rm --net=host --privileged \
                  -v /etc/strongswan/vpn-config.conf:/etc/strongswan/ipsec.d/connections/vpn-config.conf \
                  -v /etc/strongswan/ipsec.secrets:/etc/strongswan/ipsec.secrets \
                  -v /var/log/charon.log:/var/log/charon.log \
                  -v /usr/sbin/modprobe:/usr/sbin/modprobe \
                  --name $NAME $IMAGE 
        ExecStop=-/usr/bin/docker stop -t 10 $NAME

        [Install]
        WantedBy=multi-user.target
storage:
  files:
    - path: /etc/ssh/sshd_config
      filesystem: root
      mode: 384
      user:
        id: 0
      group:
        id: 0
      contents:
        source: "data:text/plain;charset=utf-8;base64,{{ index .Files "conf/sshd_config" }}"

    - path: /etc/sysctl.d/hardening.conf
      filesystem: root
      mode: 384
      user:
        id: 0
      group:
        id: 0
      contents:
        source: "data:text/plain;charset=utf-8;base64,{{ index .Files "conf/hardening.conf" }}"

    - path: /opt/bin/template-ipsec-config
      filesystem: root
      mode: 448
      user:
        id: 0
      group:
        id: 0
      contents:
        source: "data:text/plain;charset=utf-8;base64,{{ index .Files "conf/template-ipsec-config" }}"

    - path: /opt/bin/setup-iptables
      filesystem: root
      mode: 448
      user:
        id: 0
      group:
        id: 0
      contents:
        source: "data:text/plain;charset=utf-8;base64,{{ index .Files "conf/setup-iptables" }}"

    - path: /etc/strongswan/vpn-config.conf
      filesystem: root
      mode: 448
      user:
        id: 0
      group:
        id: 0
      contents:
        source: "data:text/plain;charset=utf-8;base64,{{ index .Files "conf/vpn-config.conf" }}"

    - path: /etc/strongswan/ipsec.secrets
      filesystem: root
      mode: 448
      user:
        id: 0
      group:
        id: 0
      contents:
        source: "data:text/plain;charset=utf-8;base64,{{ index .Files "conf/ipsec.secrets" }}"

{{ .BastionUsers }}
